# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-01-26 12:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0003_auto_20171029_1757'),
        ('account', '0003_auto_20170406_1056'),
        ('qrcode', '0002_auto_20171029_1757'),
    ]

    operations = [
        migrations.CreateModel(
            name='IoT_Device',
            fields=[
                ('device_name', models.CharField(help_text='A human readable name for the device.', max_length=50)),
                ('device_id', models.CharField(help_text='The MAC address of the device', max_length=6, unique=True)),
                ('slug', models.SlugField(help_text='Unique value for product page URL, created from name.', unique=True)),
                ('power', models.BigIntegerField(help_text='The normal power consumption of the device when working')),
                ('device_owner', models.EmailField(help_text='The email of the owner', max_length=255)),
                ('local_ip', models.GenericIPAddressField(default='0.0.0.0', help_text='The current local IP of the device')),
                ('multicast_address', models.CharField(default='raspberypi.local', help_text="This is the multicast DNS name of the device within it's local domain", max_length=255)),
                ('two_d_bar_code', models.OneToOneField(blank=True, default=0, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='qrcode.QRcode')),
                ('device_ledger_url', models.URLField(help_text='The URL to access the W3C Open Ledger address for this device', max_length=500)),
                ('bluetooth_address', models.CharField(help_text='The Blue Tooth address (BD_ADDR). A 48bit 6octet device identifier', max_length=6)),
                ('long', models.DecimalField(decimal_places=6, help_text='The latitude of the device up to a resolution of 10cm', max_digits=8)),
                ('lat', models.DecimalField(decimal_places=6, help_text='The longitude of the device up to a resolution of 10cm', max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(help_text='A description of this device. What it does. How it works.')),
                ('meta_keywords', models.CharField(help_text='Comma-delimited set of SEO keywords for meta tag', max_length=255, verbose_name='Meta Keywords')),
                ('meta_description', models.CharField(help_text='Content for description of meta tag', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(to='catalog.Category')),
                ('company_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Company')),
            ],
            options={
                'verbose_name_plural': 'Internet of Things Devices',
                'db_table': 'Internet of Things Device',
                'ordering': ['-created_at'],
            },
        ),
    ]
